name: MACOS_TEST

# This action builds the binary and either:
# - Pushes it to the release artifacts if this was a release
# - Uploads it as an artifact if this was a pull request
#
# if this is a pull requests, it runs e2e test on the binary

on:
  pull_request: {}

permissions:
  contents: write

jobs:
  stash:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --break-system-packages

      - name: Build package
        run: make install

      - name: Upload docci artifact
        uses: actions/upload-artifact@v4.6.1
        if: github.event_name == 'pull_request'
        with:
          name: docci_macos
          retention-days: 1
          path: /usr/local/bin/docci

    #   - name: Release
    #     uses: softprops/action-gh-release@v2
    #     if: github.event_name == 'release'
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       files: |
    #         /usr/local/bin/docci

  test-e2e-macos:
    runs-on: macos-latest
    needs: stash
    steps:
      - name: make sure this is not a release
        if: github.event_name == 'release'
        run: |
          echo "This job is not for releases, skipping..."
          exit 0

      - uses: actions/checkout@v4

      - run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Download docci binary
        uses: actions/download-artifact@v4.1.9
        with:
          name: docci_macos
          path: /usr/local/bin
      - run: chmod a+rx /usr/local/bin/docci

      # python runner in another job
      - name: Run integrations as binary
        run: EXEC_BINARY=/usr/local/bin/docci make test-examples

